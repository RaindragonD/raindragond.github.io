{"version":3,"sources":["webpack:///./src/components/collection-intro.js","webpack:///./src/components/md-list.js","webpack:///./src/templates/post-list-asc.js"],"names":["Title","styled","h1","Desc","h2","props","style","display","name","desc","location","title","posts","map","node","frontmatter","fields","slug","key","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","data","pageContext","fullName","siteTitle","site","siteMetadata","allMarkdownRemark","edges","listQuery"],"mappings":"8TAUA,IAAMA,EAAQC,IAAOC,GAAV,KAELC,EAAOF,IAAOG,GAAV,KAEK,WAACC,GACd,OACE,yBACEC,MAAO,CACLC,QAAQ,UAGV,kBAACP,EAAD,SAASK,EAAMG,KAAf,KACA,kBAACL,EAAD,SAAQE,EAAMI,KAAd,O,YCdS,gBAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOJ,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC7C,OACE,kBAAC,IAAD,CAAQC,SAAUA,EAAUC,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAOH,IACZ,kBAAC,EAAD,CAAiBA,KAAMA,EAAMC,KAAMA,IAClCG,EAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEX,MAAO,CACLa,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMd,MAAO,CAAEe,UAAU,QAAWC,GAAIR,EAAKE,OAAOC,MACjDN,IAGL,+BAAQG,EAAKC,YAAYQ,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,mB,kCChC/D,sFAIe,sBAAqC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAanB,EAAc,EAAdA,SAC3BoB,EAAyBD,EAAzBC,SAAUJ,EAAeG,EAAfH,YACZK,EAAYH,EAAKI,KAAKC,aAAatB,MACnCC,EAAQgB,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQzB,SAAUA,EAAUC,MAAOoB,EACnCnB,MAAOA,EAAOJ,KAAMsB,EAAUrB,KAAMiB,KAIjC,IAAMU,EAAS","file":"component---src-templates-post-list-asc-js-475bb325d96748b897c7.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n`\nconst Desc = styled.h2`\n`\nexport default (props) => {\n  return (\n    <div\n      style={{\n        display: `block`,\n      }}\n    >\n      <Title> {props.name} </Title>\n      <Desc> {props.desc} </Desc>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { Link} from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport CollectionIntro from '../components/collection-intro'\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({location, title, posts, name, desc}) => {\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={name} />\n      <CollectionIntro name={name} desc={desc}/>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n};","import React from 'react';\nimport { graphql } from 'gatsby'\nimport MdList from '../components/md-list'\n\nexport default ({ data, pageContext, location}) => {\n  const { fullName, description} = pageContext; // for future pagination\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <MdList location={location} title={siteTitle}\n    posts={posts} name={fullName} desc={description}/>\n  )\n};\n\nexport const listQuery = graphql`\n  query AscListQuery($collection: String!, $skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: {\n        fields: [frontmatter___date]\n        order: [ASC]\n      }\n      filter: { fields: { collection: { eq: $collection } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}